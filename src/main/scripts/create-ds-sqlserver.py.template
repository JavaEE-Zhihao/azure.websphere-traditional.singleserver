#      Copyright (c) IBM Corporation.
#      Copyright (c) Microsoft Corporation.
# 
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
# 
#           http://www.apache.org/licenses/LICENSE-2.0
# 
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# Get WAS server id as the parent ID for creating JDBC provider
server = AdminConfig.getid('/Server:${WAS_SERVER_NAME}/')

# JDBC Provider
n1 = ['name', 'SQLServerJDBCProvider']
implCN = ['implementationClassName', 'com.microsoft.sqlserver.jdbc.SQLServerConnectionPoolDataSource']
cls = ['classpath', '${SQLSERVER_JDBC_DRIVER_CLASS_PATH}']
provider = ['providerType', 'Microsoft SQL Server JDBC Driver']
jdbcAttrs = [n1,  implCN, cls, provider]
jdbCProvider = AdminConfig.create('JDBCProvider', server, jdbcAttrs)

# JASS Auth entry
userAlias = 'wasbase/sqlserver'
alias = ['alias', userAlias]
userid = ['userId', '${SQLSERVER_DATABASE_USER_NAME}']
password = ['password', '${SQLSERVER_DATABASE_USER_PASSWORD}']
jaasAttrs = [alias, userid, password]
security = AdminConfig.getid('/Security:/')
j2cUser = AdminConfig.create('JAASAuthData', security, jaasAttrs)

# Data Source
newjdbc = AdminConfig.getid('/JDBCProvider:SQLServerJDBCProvider/')
name = ['name', '${SQLSERVER_DATASOURCE_NAME}']
jndi = ['jndiName', '${SQLSERVER_DATASOURCE_JNDI_NAME}']
auth = ['authDataAlias', userAlias]
authMechanism = ['authMechanismPreference', 'BASIC_PASSWORD']
helper = ['datasourceHelperClassname', 'com.ibm.websphere.rsadapter.MicrosoftSQLServerDataStoreHelper']
dsAttrs = [name, jndi, auth, authMechanism, helper]
newds = AdminConfig.create('DataSource', newjdbc, dsAttrs)

# Data Source properties
propSet = AdminConfig.create('J2EEResourcePropertySet', newds, [])
AdminConfig.create('J2EEResourceProperty', propSet, [["name", "databaseName"], ["value", "${SQLSERVER_DATABASE_NAME}"]])
AdminConfig.create('J2EEResourceProperty', propSet, [["name", "serverName"], ["value", "${SQLSERVER_SERVER_NAME}"]])
AdminConfig.create('J2EEResourceProperty', propSet, [["name", "portNumber"], ["value", "${SQLSERVER_PORT_NUMBER}"]])

# Create CMP Connection factory
rra = AdminConfig.getid("/Server:${WAS_SERVER_NAME}/J2CResourceAdapter:WebSphere Relational Resource Adapter/")
cmpAttrs = []
cmpAttrs.append(["name", "SQLServerDataSource_CF"])
cmpAttrs.append(["authMechanismPreference", "BASIC_PASSWORD"])
cmpAttrs.append(["authDataAlias", userAlias])
cmpAttrs.append(["cmpDatasource", newds])
cf = AdminConfig.create("CMPConnectorFactory", rra, cmpAttrs)

# Save configuratoin changes
AdminConfig.save()
